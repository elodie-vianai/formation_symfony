<?php

namespace EV\PlatformBundle\Repository;

use EV\PlatformBundle\Entity\Advert;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Psr\Log\InvalidArgumentException;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends EntityRepository
{
    /**
     * Get advert before a defined datetime
     *
     * See entities Advert and Application + file Purger/AdvertPurge + file services.yml
     *
     * @param \Datetime $date
     * @return array
     */
    public function getAdvertsBefore(\Datetime $date)
    {
        return $this->createQueryBuilder('a')
            ->where('a.updatedAt <= :date')                      // Date de modification antérieure à :date
            ->orWhere('a.updatedAt IS NULL AND a.date <= :date') // Si la date de modification est vide, on vérifie la date de création
            ->andWhere('a.applications IS EMPTY')                // On vérifie que l'annonce ne contient aucune candidature
            ->setParameter('date', $date)
            ->getQuery()
            ->getResult()
            ;
    }



    /**
     * Get all adverts
     *
     * See entity Advert (and entity Category) + controller AdvertController
     *
     * @return array
     */
    public function getAdverts()
    {
        // Requête
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.image', 'i')
            ->addSelect('i')
            ->leftJoin('a.categories', 'c')
            ->addSelect('c')
            ->orderBy('a.date', 'DESC')
            ->getQuery()
        ;

        return $query->getResult();
    }
}