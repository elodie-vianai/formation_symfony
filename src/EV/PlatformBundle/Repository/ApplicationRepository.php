<?php

namespace EV\PlatformBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ApplicationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ApplicationRepository extends EntityRepository
{
    /**
     * Get all applications
     *
     * See entity Application (and entity Advert) + controller ApplicationController.
     *
     * @return array
     */
    public function getApplications()
    {
        $query = $this->createQueryBuilder('a')
            // Jointure sur l'attribut image
            ->innerJoin('a.advert', 'adv')      // liaison
            ->addSelect('adv')                     // sélection de l'annonce correspondantes à la candidature
            ->orderBy('a.date', 'DESC')
            ->getQuery();

        return $query->getResult();
    }


    /**
     * Get applications related to an advert
     *
     * See entity Application (and entity Advert) + controllers ApplicationController and AdvertController
     *
     * @param $limit
     * @return array
     */
    public function getApplicationsWithAdvert($limit)
    {
        $qb = $this->createQueryBuilder('a');

        // Jointure avec l'entité Advert avec pour alias « adv »
        $qb
            ->innerJoin('a.advert', 'adv')
            ->addSelect('adv');

        // Retour uniquement de $limit résultats
        $qb->setMaxResults($limit);

        // Retour des résultats
        return $qb->getQuery()->getResult();
    }


// ITERATION-15
//    /**
//     * @param $ip
//     * @param $seconds
//     * @return bool
//     */
//    public function isFlood($ip, $seconds) {
//        return (boolean) $this->createQueryBuilder('a')
//            ->select('COUNT(a')
//            ->where('a.date >= :date')
//            ->setParameter('date', new \DateTime($seconds, 'secaonds ago'))
//            ->getQuery()
//            ->getSingleScalarResult();
//    }
}